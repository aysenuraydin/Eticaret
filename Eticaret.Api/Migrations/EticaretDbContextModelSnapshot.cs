// <auto-generated />
using System;
using Eticaret.Persistence.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eticaret.API.Migrations
{
    [DbContext(typeof(EticaretDbContext))]
    partial class EticaretDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Eticaret.Domain.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Eticaret.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconCssClass")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "	#a4b2b0",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7940),
                            Name = "Yelek"
                        },
                        new
                        {
                            Id = 2,
                            Color = "	#896863	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7950),
                            Name = "Triko"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#C27D42	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7960),
                            Name = "Sweatshirt"
                        },
                        new
                        {
                            Id = 4,
                            Color = "	#BF8882	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7960),
                            Name = "Şort"
                        },
                        new
                        {
                            Id = 5,
                            Color = "	#A4B2B0	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7960),
                            Name = "Kazak"
                        },
                        new
                        {
                            Id = 6,
                            Color = "#828DE5",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7960),
                            Name = "Elbise"
                        },
                        new
                        {
                            Id = 7,
                            Color = "#595B56	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7970),
                            Name = "Ceket"
                        },
                        new
                        {
                            Id = 8,
                            Color = "	#CDC6C3	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7970),
                            Name = "Pantolon"
                        },
                        new
                        {
                            Id = 9,
                            Color = "#DEBDB0",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7970),
                            Name = "Etek"
                        },
                        new
                        {
                            Id = 10,
                            Color = "	#BE969B	",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7970),
                            Name = "Bluz"
                        });
                });

            modelBuilder.Entity("Eticaret.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Eticaret.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Eticaret.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<byte>("StockAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8010),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Yelek 1",
                            Price = 619m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8020),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Yelek 2",
                            Price = 619m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8020),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Yelek 3",
                            Price = 510m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8030),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Triko 1",
                            Price = 700m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8030),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Triko 2",
                            Price = 700m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8040),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Triko 3",
                            Price = 700m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8040),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Sweatshirt 1",
                            Price = 320m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8040),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Sweatshirt 2",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8050),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Sweatshirt 3",
                            Price = 600m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8050),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Şort 1",
                            Price = 900m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8050),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Şort 2",
                            Price = 900m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8060),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Şort 3",
                            Price = 900m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8060),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = false,
                            Name = "Şort 4",
                            Price = 900m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8060),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Şort 5",
                            Price = 900m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8070),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Kazak 1",
                            Price = 300m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8070),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Kazak 2",
                            Price = 300m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8070),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = false,
                            Name = "Kazak 3",
                            Price = 300m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8080),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = false,
                            Name = "Elbise 1",
                            Price = 500m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8150),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Elbise 2",
                            Price = 500m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8150),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Elbise 3",
                            Price = 500m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8160),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Elbise 4",
                            Price = 500m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8160),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Ceket 1",
                            Price = 360m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8170),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = false,
                            Name = "Ceket 2",
                            Price = 360m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8170),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Ceket 3",
                            Price = 360m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8170),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Ceket 4",
                            Price = 360m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8180),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Pantolon 1",
                            Price = 400m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8180),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Pantolon 2",
                            Price = 400m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8180),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = false,
                            Name = "Pantolon 3",
                            Price = 400m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8190),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Pantolon 4",
                            Price = 400m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8190),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Etek 1",
                            Price = 550m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8190),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Etek 2",
                            Price = 550m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8200),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = false,
                            Name = "Etek 3",
                            Price = 550m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8200),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Etek 4",
                            Price = 550m,
                            StockAmount = (byte)10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8200),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Bluz 1",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8210),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = false,
                            Name = "Bluz 2",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8210),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Bluz 3",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8210),
                            Details = "ürün açıklama",
                            Enabled = true,
                            IsConfirmed = true,
                            Name = "Bluz 4",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8220),
                            Details = "ürün açıklama",
                            Enabled = false,
                            IsConfirmed = true,
                            Name = "Bluz 5",
                            Price = 450m,
                            StockAmount = (byte)10,
                            UserId = 12
                        });
                });

            modelBuilder.Entity("Eticaret.Domain.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("StarCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8270),
                            IsConfirmed = true,
                            ProductId = 1,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8270),
                            IsConfirmed = true,
                            ProductId = 2,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8280),
                            IsConfirmed = true,
                            ProductId = 3,
                            StarCount = (byte)3,
                            Text = "Great product!",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8280),
                            IsConfirmed = true,
                            ProductId = 4,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8280),
                            IsConfirmed = true,
                            ProductId = 5,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8280),
                            IsConfirmed = true,
                            ProductId = 6,
                            StarCount = (byte)1,
                            Text = "Great product!",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8290),
                            IsConfirmed = true,
                            ProductId = 7,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8290),
                            IsConfirmed = true,
                            ProductId = 8,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8290),
                            IsConfirmed = true,
                            ProductId = 9,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8290),
                            IsConfirmed = true,
                            ProductId = 10,
                            StarCount = (byte)4,
                            Text = "Great product!",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8300),
                            IsConfirmed = true,
                            ProductId = 11,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8300),
                            IsConfirmed = true,
                            ProductId = 12,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8300),
                            IsConfirmed = true,
                            ProductId = 13,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8300),
                            IsConfirmed = true,
                            ProductId = 14,
                            StarCount = (byte)5,
                            Text = "Great product!",
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8300),
                            IsConfirmed = true,
                            ProductId = 15,
                            StarCount = (byte)4,
                            Text = "Nice product!",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Eticaret.Domain.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8410),
                            ProductId = 1,
                            Url = "yelek-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8420),
                            ProductId = 2,
                            Url = "yelek-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8420),
                            ProductId = 3,
                            Url = "yelek-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8430),
                            ProductId = 4,
                            Url = "triko-01.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8440),
                            ProductId = 5,
                            Url = "triko-02.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8440),
                            ProductId = 6,
                            Url = "triko-03.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8450),
                            ProductId = 7,
                            Url = "sweatshirt-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8450),
                            ProductId = 8,
                            Url = "sweatshirt-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8460),
                            ProductId = 9,
                            Url = "sweatshirt-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8460),
                            ProductId = 10,
                            Url = "sort-01.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8470),
                            ProductId = 11,
                            Url = "sort-02.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8480),
                            ProductId = 12,
                            Url = "sort-03.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8480),
                            ProductId = 13,
                            Url = "sort-04.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8490),
                            ProductId = 14,
                            Url = "sort-05.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8490),
                            ProductId = 15,
                            Url = "kazak-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8500),
                            ProductId = 16,
                            Url = "kazak-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8510),
                            ProductId = 17,
                            Url = "kazak-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8510),
                            ProductId = 18,
                            Url = "elbise-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8520),
                            ProductId = 19,
                            Url = "elbise-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8520),
                            ProductId = 20,
                            Url = "elbise-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8530),
                            ProductId = 21,
                            Url = "elbise-04.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8530),
                            ProductId = 22,
                            Url = "ceket-01.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8540),
                            ProductId = 23,
                            Url = "ceket-02.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8540),
                            ProductId = 24,
                            Url = "ceket-03.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8550),
                            ProductId = 25,
                            Url = "ceket-04.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8550),
                            ProductId = 26,
                            Url = "pantolon-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8560),
                            ProductId = 27,
                            Url = "pantolon-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8570),
                            ProductId = 28,
                            Url = "pantolon-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8570),
                            ProductId = 29,
                            Url = "pantolon-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8580),
                            ProductId = 30,
                            Url = "etek-01.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8580),
                            ProductId = 31,
                            Url = "etek-02.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8590),
                            ProductId = 32,
                            Url = "etek-03.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8590),
                            ProductId = 33,
                            Url = "etek-04.jpg",
                            UserId = 13
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8600),
                            ProductId = 34,
                            Url = "bluz-01.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8610),
                            ProductId = 35,
                            Url = "bluz-02.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8610),
                            ProductId = 36,
                            Url = "bluz-03.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8620),
                            ProductId = 37,
                            Url = "bluz-04.jpg",
                            UserId = 12
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(8620),
                            ProductId = 38,
                            Url = "bluz-05.jpg",
                            UserId = 12
                        });
                });

            modelBuilder.Entity("Eticaret.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7670),
                            Name = "seller",
                            NormalizedName = "SELLER"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7700),
                            Name = "buyer",
                            NormalizedName = "BUYER"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7710),
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Eticaret.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d5c48936-bd13-4427-8a66-af5f8ac178bb",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7770),
                            Email = "aysenur@aydin.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Admin",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 3,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77cd2485-2489-4a7b-b3e6-7364e6c7619b",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7820),
                            Email = "ays2@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur4",
                            LastName = "Aydın4",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f56b37c-4f80-4eb0-a7b5-6d278c06decc",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7830),
                            Email = "ays3@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur5",
                            LastName = "Aydın5",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ed5b4389-e170-4a38-bf2d-b975358de51a",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7830),
                            Email = "ays4@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur6",
                            LastName = "Aydın6",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "85ea65c4-0f21-42ba-83c6-4350ee3cbbb7",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7840),
                            Email = "ays5@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur7",
                            LastName = "Aydın7",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a8415eb2-9756-4c0b-96e0-676d3154ab3f",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7850),
                            Email = "ays6@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur4",
                            LastName = "Aydın4",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1a58023a-4c9d-4c87-bcea-5d1a26f03b2e",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7860),
                            Email = "ays7@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur5",
                            LastName = "Aydın5",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "119b4f81-644a-43dd-a0a2-6a2825c7d329",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7860),
                            Email = "ays8@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur6",
                            LastName = "Aydın6",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e0dec070-fc3c-4cc8-8cce-2f36f601543e",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7870),
                            Email = "ays9@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur7",
                            LastName = "Aydın7",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "624de068-d9bf-44de-a2f9-7e76910592cd",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7880),
                            Email = "ays10@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur2",
                            LastName = "Aydın2",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 2,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cfdadf8a-9239-4df6-8a1e-b176e9fd4437",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7890),
                            Email = "ays11@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur5",
                            LastName = "Aydın5",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 1,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c82f5b2d-82d9-464d-a6d3-77418661d5bb",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7890),
                            Email = "ays12@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur6",
                            LastName = "Aydın6",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 1,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca075297-a597-410a-85d6-ce3d255ffad0",
                            CreatedAt = new DateTime(2024, 8, 31, 10, 35, 19, 113, DateTimeKind.Local).AddTicks(7900),
                            Email = "ays13@ayd.com",
                            EmailConfirmed = false,
                            Enabled = true,
                            FirstName = "Ayşenur7",
                            LastName = "Aydın7",
                            LockoutEnabled = false,
                            PasswordHash = "123456",
                            PhoneNumberConfirmed = false,
                            RoleId = 1,
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Eticaret.Domain.CartItem", b =>
                {
                    b.HasOne("Eticaret.Domain.Product", "ProductFk")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductFk");

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.Order", b =>
                {
                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.OrderItem", b =>
                {
                    b.HasOne("Eticaret.Domain.Order", "OrderFk")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.Product", "ProductFk")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("OrderItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderFk");

                    b.Navigation("ProductFk");

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.Product", b =>
                {
                    b.HasOne("Eticaret.Domain.Category", "CategoryFk")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryFk");

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.ProductComment", b =>
                {
                    b.HasOne("Eticaret.Domain.Product", "ProductFk")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("ProductComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductFk");

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.ProductImage", b =>
                {
                    b.HasOne("Eticaret.Domain.Product", "ProductFk")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", "UserFk")
                        .WithMany("ProductImages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductFk");

                    b.Navigation("UserFk");
                });

            modelBuilder.Entity("Eticaret.Domain.User", b =>
                {
                    b.HasOne("Eticaret.Domain.Role", "RoleFk")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleFk");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Eticaret.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Eticaret.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Eticaret.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Eticaret.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Eticaret.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Eticaret.Domain.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Eticaret.Domain.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductComments");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Eticaret.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Eticaret.Domain.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("Orders");

                    b.Navigation("ProductComments");

                    b.Navigation("ProductImages");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
